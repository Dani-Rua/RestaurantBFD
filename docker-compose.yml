version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
    - restaurant_net

  mongo:
    image: mongo:latest
    container_name: database
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data
    networks:
    - restaurant_net
  
  order-app:
    build:
      context: ./RestaurantOrder
      dockerfile: Dockerfile
    container_name: order-app
    ports:
      - "8091:8091"
    depends_on:
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
    - restaurant_net
    

  inventario_app:
    build:
      context: ./inventario
      dockerfile: Dockerfile
    container_name: inventario_app
    ports:
      - "8080:8080"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest
    networks:
    - restaurant_net

networks:
  restaurant_net:
    driver: bridge


